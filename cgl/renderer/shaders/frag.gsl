#version 330 core

in vec3 nm_out;
in vec2 tx_out;
in vec3 frag_pos;

out vec4 color;

uniform sampler2D st;

void main() {
  vec3 lightColor = vec3(1.0, 1.0, 1.0);
  vec3 ambient = 0.3 * lightColor;
  vec3 lightPos = vec3(4.0, 10.0, 4.0);

  vec3 norm = normalize(nm_out);
  vec3 lightDir = normalize(lightPos - frag_pos);  

  float diff = max(dot(norm, lightDir), 0.0);
  vec3 diffuse = diff * lightColor;
  vec3 result = (ambient + diffuse) * vec3(1.0, 1.0, 1.0);

  color = texture(st, tx_out) * vec4(result, 0.0);
}